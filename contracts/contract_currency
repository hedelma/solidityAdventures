contract MyToken {
    
    string public name;
    uint8 public decimals;
    uint256 public totalSupply;
    mapping (address => uint256) public coinBalance;
    mapping (address => mapping (address => uint256)) public allowance;
    event Transfer(address indexed from, address indexed to, uint256 value);

    /* Initializes contract with initial supply tokens to the creator of the contract */
    function MyToken(uint256 initialSupply,string tokenName,uint8 decimalUnits/*,string tokenSymbol*/) {
        coinBalance[msg.sender] = initialSupply;              
        totalSupply = initialSupply;                        
        name = tokenName;                                   
        decimals = decimalUnits;                            
        msg.sender.send(msg.value);                         
    }

    /* Send coins */
    function transfer(address _to, uint256 _value) {
        if (coinBalance[msg.sender] < _value) throw;           
        if (coinBalance[_to] + _value < coinBalance[_to]) throw; 
        coinBalance[msg.sender] -= _value;                     
        coinBalance[_to] += _value;                         
        Transfer(msg.sender, _to, _value);                   
    }

    /* Allow another contract to spend some tokens in your behalf */
    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {
        allowance[msg.sender][_spender] = _value;
        tokenRecipient spender = tokenRecipient(_spender);
        spender.receiveApproval(msg.sender, _value, this, _extraData);
        return true;
    }

    /* A contract attempts to get the coins */
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
        if (coinBalance[_from] < _value) throw;                
        if (coinBalance[_to] + _value < coinBalance[_to]) throw;  
        if (_value > allowance[_from][msg.sender]) throw;  
        coinBalance[_from] -= _value;                          
        coinBalance[_to] += _value;                          
        allowance[_from][msg.sender] -= _value;
        Transfer(_from, _to, _value);
        return true;
    }

    /* Recover funds */
    
    function kill()
    { 
        suicide(creator);  
}
}

/* Deployment Code
var initialSupply = 10000;
var tokenName = 'm2mcoin';
var decimalUnits = 5 ;
var mytokenContract = web3.eth.contract([{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":true,"inputs":[],"name":"standard","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_extraData","type":"bytes"}],"name":"approveAndCall","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"},{"name":"","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"coinBalance","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"inputs":[{"name":"initialSupply","type":"uint256"},{"name":"tokenName","type":"string"},{"name":"decimalUnits","type":"uint8"}],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"}]);
var mytoken = mytokenContract.new(
   initialSupply,
   tokenName,
   decimalUnits,
   {
     from: web3.eth.accounts[3], 
     data: '60a0604052600b6060527f4d324d636f696e20312e30000000000000000000000000000000000000000000608052600080548180527f4d324d636f696e20312e3000000000000000000000000000000000000000001682556100b3907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563602060026001841615610100026000190190931692909204601f01919091048101905b8082111561016e576000815560010161009f565b505060405161080438038061080483398101604052808051906020019091908051820191906020018051906020019091905050826004600050600033600160a060020a0316815260200190815260200160002060005081905550826003600050819055508160016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017257805160ff19168380011785555b506101a292915061009f565b5090565b82800160010185558215610162579182015b82811115610162578251826000505591602001919060010190610184565b50506002805460ff191682179055604051600160a060020a03331690600090349082818181858883f15050505050505050610623806101e16000396000f3606060405236156100775760e060020a600035046306fdde03811461007957806318160ddd146100d557806323b872dd146100de578063313ce567146101105780635a3b7e421461011c578063a9059cbb14610179578063cae9ca51146101a8578063dd62ed3e1461030a578063fabde80c1461032f575b005b610347600180546020600282841615610100026000190190921691909104601f810182900490910260809081016040526060828152929190828280156103fc5780601f106103d1576101008083540402835291602001916103fc565b6103b560035481565b6103bf600435602435604435600160a060020a0383166000908152600460205260408120548290101561040457610002565b6103b560025460ff1681565b61034760008054602060026001831615610100026000190190921691909104601f810182900490910260809081016040526060828152929190828280156103fc5780601f106103d1576101008083540402835291602001916103fc565b610077600435602435600160a060020a0333166000908152600460205260409020548190101561055457610002565b60806020604435600481810135601f8101849004909302840160405260608381526103bf948235946024803595606494939101919081908382808284375094965050505050505060006000836005600050600033600160a060020a03168152602001908152602001600020600050600087600160a060020a031681526020019081526020016000206000508190555084905080600160a060020a0316638f4ffcb1338630876040518560e060020a0281526004018085600160a060020a0316815260200184815260200183600160a060020a03168152602001806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102dd5780820380516001836020036101000a031916815260200191505b50955050505050506000604051808303816000876161da5a03f11561000257506001979650505050505050565b6005602090815260043560009081526040808220909252602435815220546103b59081565b6103b560043560046020526000908152604090205481565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156103a75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060908152602090f35b60408051918252519081900360200190f35b820191906000526020600020905b8154815290600101906020018083116103df57829003601f168201915b505050505081565b600160a060020a03831681526040812054808301101561042357610002565b600160a060020a0380851682526005602090815260408084203393909316845291905281205482111561045557610002565b816004600050600086600160a060020a03168152602001908152602001600020600082828250540392505081905550816004600050600085600160a060020a03168152602001908152602001600020600082828250540192505081905550816005600050600086600160a060020a03168152602001908152602001600020600050600033600160a060020a0316815260200190815260200160002060008282825054039250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35060019392505050565b600160a060020a03821660009081526040902054808201101561057657610002565b806004600050600033600160a060020a03168152602001908152602001600020600082828250540392505081905550806004600050600084600160a060020a0316815260200190815260200160002060008282825054019250508190555081600160a060020a031633600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056', 
     gas: 4700000  // change based on gas availability
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })*/
